package labgraficas;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.File;
import java.io.FileWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;
import java.util.Arrays;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
public class datos extends javax.swing.JFrame {
    String []valores=null;
    String []valores2=new String [655];// vector para guardar las palabras
    String []topp=new String [655];
    int []contador;int []max;
    int k;
    DefaultTableModel modelo= new  DefaultTableModel();
    DefaultComboBoxModel caja=new DefaultComboBoxModel();
    public datos() {
        String [] Titulos;
        String linea;
        int y=0;
                caja.removeAllElements();
        caja.addElement("");
        File archivo = new File("suicidios.csv");
        try {
            Scanner entrada= new Scanner(archivo); // objeto para procesar informaci√≥n
            while(entrada.hasNext()){
                if (y==1) break;
                linea=entrada.nextLine();
                Titulos=linea.split(",");
                for(int x=0;x<Titulos.length;x++){
                    caja.addElement(Titulos[x]);
                }
                y++;
                }
        } catch (IOException ex) {
            System.out.print("Error, es el siguiente: "+ex);
        }
        initComponents();
    }
    boolean top3=false;int p=0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Filtrar1 = new javax.swing.JButton();
        filtrar2 = new javax.swing.JButton();
        Seleccion = new javax.swing.JComboBox<>();
        top3text = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Barras = new javax.swing.JButton();
        Torta = new javax.swing.JButton();
        Vaciar = new javax.swing.JButton();
        Imprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(modelo);
        jScrollPane1.setViewportView(jTable1);

        Filtrar1.setText("Filtrar");
        Filtrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Filtrar1ActionPerformed(evt);
            }
        });

        filtrar2.setText("Top de datos");
        filtrar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrar2ActionPerformed(evt);
            }
        });

        Seleccion.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 10)); // NOI18N
        Seleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Seleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionActionPerformed(evt);
            }
        });

        top3text.setFont(new java.awt.Font("OCR A Extended", 0, 12)); // NOI18N
        top3text.setText("Top: Desactivado");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
        );

        Barras.setFont(new java.awt.Font("Perpetua Titling MT", 0, 12)); // NOI18N
        Barras.setText("Grafico de barras");
        Barras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarrasActionPerformed(evt);
            }
        });

        Torta.setFont(new java.awt.Font("Perpetua Titling MT", 0, 12)); // NOI18N
        Torta.setText("Grafico de Torta");
        Torta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TortaActionPerformed(evt);
            }
        });

        Vaciar.setFont(new java.awt.Font("Perpetua Titling MT", 0, 12)); // NOI18N
        Vaciar.setText("Vaciar");
        Vaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VaciarActionPerformed(evt);
            }
        });

        Imprimir.setFont(new java.awt.Font("Perpetua Titling MT", 0, 12)); // NOI18N
        Imprimir.setText("Imprimir");
        Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Seleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(Filtrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(top3text)
                                    .addComponent(filtrar2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(Barras)
                                        .addGap(39, 39, 39)
                                        .addComponent(Torta))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(161, 161, 161)
                                        .addComponent(Vaciar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Seleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Filtrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addComponent(filtrar2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(top3text, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Barras, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Torta, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Vaciar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(50, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Filtrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Filtrar1ActionPerformed
        String linea; // variable para guardar los datos de una linea
        File archivo = new File("suicidios.csv");  // objeto que lee el archivo
        int i=-1, m=1, l=0;
        k=0;
        contador=new int [655];
        int []contador2;max=new int [4];
        int j=Seleccion.getSelectedIndex();  
        boolean check;
        for (int x=0;x<contador.length;x++)contador[x]=0;
        try {
            Scanner entrada= new Scanner(archivo); // objeto para procesar informaci√≥n
            modelo.setColumnCount(1);
            modelo.setRowCount(655);
            
            while(entrada.hasNext()){
                i++;
                linea=entrada.nextLine(); // toma la linea completa y la almacena en un string
                valores=linea.split(","); // toma los valores entre coma y coma y los guarda en 
                if (j!=0)valores2[i]=valores[j-1];else valores2[i]="";
                // System.out.println(" los valores de la primera linea son: "+ linea+" el primer valor guardado es: "+ valores[0]);
                if (i==0 && j!=0)topp[0]=valores[j-1];else topp[i]="";
                if (j!=0){
                    for (int x=0;x<=k;x++){
                        if (topp[x].equals(valores[j-1]))break;
                        else if (x==k){k++;topp[k]=valores[j-1];}
                    }
                }
                if (j!=0){
                    modelo.setValueAt(valores[j-1], i,0);
                }
            }
            //para saber cuantas veces se repite el dato
            for (int x=0;x<=k;x++){
                for (int z=0;z<valores2.length;z++){
                    if (topp[x].equals(valores2[z]))contador[x]+=1;
                }
            }
            contador2=Arrays.copyOf(contador,contador.length);
            Arrays.sort(contador2);
            for (int n=contador2.length-1;n>contador2.length-4;n--) {
                if (contador2[n]!=1)
                max[l]=contador2[n]; else max[l]=-1;
                l++;
            }
            if (j!=0 && top3==true){
                modelo.setValueAt(valores2[0], 0,0);
                for (int x=0;x<=k;x++){
                    if (contador[x]==max[0] || contador[x]==max[1] || contador[x]==max[2])check=true;else check=false;      
                    for (int z=0;z<valores2.length;z++){
                        if (topp[x].equals(valores2[z]) && check==true){
                            modelo.setValueAt(valores2[z], m,0);m++;}
                    }
                }
                for (int x=m;x<valores2.length;x++){
                    modelo.setValueAt("", m,0);m++;}
            }
            //vaciar el resto del array
            for (int x=k+1;x<topp.length;x++)
            {topp[x]="0";contador[x]=0;}
            /*for(int x=0;x<topp.length;x++)System.out.print(topp[x]+" ");
            System.out.println();
            for(int x=0;x<max.length;x++)System.out.print(max[x]+" ");
            System.out.println();//System.out.println(k);
            for(int x=0;x<contador.length;x++)System.out.print(contador[x]+" ");
            System.out.println();*/
        } catch (IOException ex) {
            System.out.print("Error, es el siguiente: "+ex);
        }
    }//GEN-LAST:event_Filtrar1ActionPerformed

    private void filtrar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrar2ActionPerformed
        if (p==0){
            top3=true;
            p++;
            top3text.setText("Top: Activado");
        }
        else{
            top3=false;
            p=0;
            top3text.setText("Top: Desactivado");
        }
    }//GEN-LAST:event_filtrar2ActionPerformed

    private void SeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionActionPerformed
        Seleccion.setModel(caja);
    }//GEN-LAST:event_SeleccionActionPerformed

    private void BarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarrasActionPerformed
        DefaultCategoryDataset datos = new DefaultCategoryDataset();
        int []guarda=new int [3];
        if (Seleccion.getSelectedIndex()!=0){
        if (top3==false)
            for (int x=1;x<=k;x++)
                datos.setValue(contador[x],topp[0],topp[x]);
        else{
            for (int x=0;x<=2;x++){    
                for (int z=0;z<contador.length;z++){
                        if (max[x]==contador[z]){
                        guarda[x]=z;
                        break;
                        }else guarda[x]=-1;
                    }
                }
            for (int x=0;x<=2;x++)
                if (guarda[x]!=-1)
                datos.setValue(max[x],topp[0],topp[guarda[x]]);
        }
        JFreeChart graficobarras = ChartFactory.createBarChart(
        "Grafico de barras pedido",
        topp[0],
        "Cantidad",
        datos
        );
        ChartPanel panel = new ChartPanel(graficobarras);
        panel.setMouseWheelEnabled(true);
        panel.setPreferredSize(new Dimension (400,250));
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(panel,BorderLayout.NORTH);
        pack();
        repaint();
        }
    }//GEN-LAST:event_BarrasActionPerformed

    private void VaciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VaciarActionPerformed
        jPanel1.removeAll();
        jPanel1.setPreferredSize(new Dimension (400,250));
        jPanel1.revalidate();
        jPanel1.repaint();
    }//GEN-LAST:event_VaciarActionPerformed

    private void TortaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TortaActionPerformed
        DefaultPieDataset datos = new DefaultPieDataset();
        int []guarda=new int [3];
        if (Seleccion.getSelectedIndex()!=0){
        if (top3==false)
            for (int x=1;x<=k;x++)
                datos.setValue(topp[x],contador[x]);
        else{
            for (int x=0;x<=2;x++){    
                for (int z=0;z<contador.length;z++){
                        if (max[x]==contador[z]){
                        guarda[x]=z;
                        break;
                        }else guarda[x]=-1;
                    }
                }
            for (int x=0;x<=2;x++)
                if (guarda[x]!=-1)
                    datos.setValue(topp[guarda[x]],max[x]);
            }
        JFreeChart graficotorta = ChartFactory.createPieChart(
                topp[0],
                datos,
                true,
                true,
                false
        );
        ChartPanel panel=new ChartPanel(graficotorta);
        panel.setMouseWheelEnabled(true);
        panel.setPreferredSize(new Dimension (400,250));
        jPanel1.setLayout(new BorderLayout());
        jPanel1.add(panel,BorderLayout.NORTH);
        pack();
        repaint();
        
        }
    }//GEN-LAST:event_TortaActionPerformed

    private void ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirActionPerformed
        // jLabel1.setText((String)modelo.getValueAt(0,0));
        if (Seleccion.getSelectedIndex()!=0 && modelo.getRowCount()>0){
         try {
            FileWriter writer = new FileWriter("filtro.csv");
            for (int x=0;x<modelo.getRowCount();x++)
            {
            writer.write((String)modelo.getValueAt(x,0)+"\n");
            writer.flush();
            }
        } catch (IOException ex) {
            System.out.print("Error, es el siguiente: "+ex);
        }
    }
    }//GEN-LAST:event_ImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new datos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Barras;
    private javax.swing.JButton Filtrar1;
    private javax.swing.JButton Imprimir;
    private javax.swing.JComboBox<String> Seleccion;
    private javax.swing.JButton Torta;
    private javax.swing.JButton Vaciar;
    private javax.swing.JButton filtrar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel top3text;
    // End of variables declaration//GEN-END:variables
}
